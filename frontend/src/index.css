@import url('https://fonts.googleapis.com/css2?family=Montserrat:wght@300;400;500;600;700;800&family=Roboto:wght@300;400;500;700&family=Fira+Code:wght@400;500&display=swap');

@tailwind base;
@tailwind components;
@tailwind utilities;

@layer base {
  html {
    scroll-behavior: smooth;
  }
  
  body {
    @apply bg-dark text-light;
    margin: 0;
    -webkit-font-smoothing: antialiased;
    -moz-osx-font-smoothing: grayscale;
    overflow-x: hidden;
  }
  
  h1, h2, h3, h4, h5, h6 {
    @apply font-display font-bold;
  }
  
  p {
    @apply font-sans;
  }
}

@layer components {
  .section {
    @apply py-20 px-4 md:px-8 lg:px-16 max-w-7xl mx-auto;
  }
  
  .glass-card {
    @apply bg-glass backdrop-blur-md border border-white/10 rounded-2xl shadow-lg;
  }
  
  .btn {
    @apply px-6 py-3 rounded-full font-semibold transition-all duration-300 transform hover:scale-105 focus:outline-none;
  }
  
  .btn-primary {
    @apply btn bg-primary hover:bg-primary-light text-white;
  }
  
  .btn-secondary {
    @apply btn bg-secondary hover:bg-secondary-light text-white;
  }
  
  .btn-outline {
    @apply btn border-2 border-white/50 hover:border-white text-white;
  }
  
  .gradient-text {
    @apply bg-clip-text text-transparent bg-gradient-primary;
  }
}

/* Animace */
.reveal {
  opacity: 0;
  transform: translateY(30px);
  transition: all 0.8s ease;
}

.reveal.active {
  opacity: 1;
  transform: translateY(0);
}

/* Glass effect */
.glass {
  background: rgba(255, 255, 255, 0.08);
  backdrop-filter: blur(12px);
  -webkit-backdrop-filter: blur(12px);
  border: 1px solid rgba(255, 255, 255, 0.1);
}

/* Gradient border */
.gradient-border {
  position: relative;
}

.gradient-border::before {
  content: "";
  position: absolute;
  inset: 0;
  border-radius: inherit;
  padding: 2px;
  background: linear-gradient(135deg, #0D47A1, #D32F2F);
  -webkit-mask: 
    linear-gradient(#fff 0 0) content-box, 
    linear-gradient(#fff 0 0);
  -webkit-mask-composite: xor;
  mask-composite: exclude;
  pointer-events: none;
}

/* Parallax effect */
.parallax {
  transform: translateY(var(--parallax-y, 0));
}
